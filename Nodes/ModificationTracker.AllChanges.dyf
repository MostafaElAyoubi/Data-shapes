<Workspace Version="1.2.1.3083" X="212" Y="371" zoom="1" Name="ModificationTracker.AllChanges" Description="Takes ExistingElements Data as input and outputs lists with all geometry/parameter values change combinations . Check out www.Data-Shapes.net for more informations ." ID="d5437128-64cf-49ea-b11b-0c06412435ff" Category="Data-Shapes.ModificationTracker">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="580d2bdc-e8b2-48ff-affc-6149ef63b65b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="504.287614554191" y="5.12484392029023" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="//same geometry and parameters&#xA;x[0];&#xA;//same geometry different parameter&#xA;x[1];&#xA;//different geometry and same parameter&#xA;x[2];&#xA;//different geometry and parameters&#xA;x[3];&#xA;//report&#xA;x[4];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="1d6f4de8-086d-4d99-9f07-bd20e384215b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Copyright (c) mostafa el ayoubi ,  2016
#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com
#This node was inspired by Jeremy Tammik @Jeremytammik

import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

if isinstance(IN[0][0],list):
	elementsA = UnwrapElement(IN[0][0])
	elementsB = UnwrapElement(IN[0][1])
else :
	elementsA = [UnwrapElement(IN[0][0])]
	elementsB = [UnwrapElement(IN[0][1])]

def flatten(container):
    for i in container:
        if isinstance(i, (list,tuple)):
            for j in flatten(i):
                yield j
        else:
            yield i

def tostring(x):
	return x.ToString()
def getgeomlist(x):
	return list(x.get_Geometry(Options()))


def getvertices(x):
	#getting geometryelements as list
	geomelems = getgeomlist(x)
	#getting nested instance geometry for all geometry instances
	while any('GeometryInstance' in g for g in map(tostring,geomelems)):
		for index,i in enumerate(geomelems):
			if 'GeometryInstance' in i.ToString():
				geomelems[index] = i.GetInstanceGeometry()
			else:
				continue
			geomelems = list(flatten(geomelems))[0]
	#getting all faces, keeping meshes
	faces = []
	for i in geomelems:
		if 'Solid' in i.ToString():
			faces.append(list(i.Faces))
		elif 'Mesh' in i.ToString():
			faces.append(i)
		else:
			continue
	faces = list(flatten(faces))
	#getting all meshes
	meshes = []
	for f in faces:
		if 'Mesh' in f.ToString():
			meshes.append(f)
		else:
			meshes.append(f.Triangulate())
	#getting all vertices
	vertexlist = []
	for m in meshes:
		vertexlist.append(list(m.Vertices))
	vertexlist = list(flatten(vertexlist))
	#creating sorted vertex string representation of object for comparison with other indice of element
	vertexstr = ', '.join(sorted(set(map(tostring,vertexlist))))
	return vertexstr

def parametersnapshot(x):
	parameters = x.Parameters
	paramnames = [p.Definition.Name for p in parameters]
	sortedindex = sorted(range(len(paramnames)), key = lambda k : paramnames[k])
	sortedparameters = [paramnames[i] for i in sortedindex]
	paramvalues = []
	for p in parameters:
		if p.AsString() != None:
			paramvalues.append(p.AsString())
		else :
			paramvalues.append(p.AsValueString())
	sortedvalues = [paramvalues[i] for i in sortedindex]
	return ', '.join(['%s : %s' % (param,value) for param,value in zip(sortedparameters,sortedvalues)])


geomtest = []
paramtest = []
for eA,eB in zip(elementsA,elementsB):
	geomtest.append(getvertices(eA) == getvertices(eB))
	paramtest.append(parametersnapshot(eA) == parametersnapshot(eB))

samegeometrysameparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt and pt]
differentgeometrysameparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == False and pt == True]
samegeometrydifferentparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == True and pt == False]
differentgeometrydifferentparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == False and pt == False]

report = '%d element(s) tested \n%d element(s) with same geometry and parameters, \n%d element(s) with same geometry and different parameters, \n%d element(s) with different geometry and same parameters, \n%d element(s) with different geometry and different parameters' %(len(elementsA),len(samegeometrysameparameters),len(samegeometrydifferentparameters),len(differentgeometrysameparameters), len(differentgeometrydifferentparameters))

OUT = samegeometrysameparameters , samegeometrydifferentparameters , differentgeometrysameparameters, differentgeometrydifferentparameters, report</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="cfe98d52-aafb-4d9f-86dd-cf33361799bb" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-36.5" y="-1" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="ExistingElements Data" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f4ca275b-c0ca-43bd-9728-7442a7753bb9" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1001.5" y="17" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Report" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="364decfb-48fe-4d01-a1b1-be1619a51b8a" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="997.5" y="85" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Same geometry and parameter values" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="127f6986-5306-4eab-b8c7-944f44f32667" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="998.5" y="150" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Same geometry, different parameter values" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="30b183b8-186a-494c-ace8-694a296ccdca" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="998.5" y="212" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Different geometry, same parameter values" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a3e757ca-197b-432d-9fa6-823f7aa40ee6" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="997.5" y="276" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Different geometry and parameter values" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="580d2bdc-e8b2-48ff-affc-6149ef63b65b" start_index="0" end="364decfb-48fe-4d01-a1b1-be1619a51b8a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="580d2bdc-e8b2-48ff-affc-6149ef63b65b" start_index="1" end="127f6986-5306-4eab-b8c7-944f44f32667" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="580d2bdc-e8b2-48ff-affc-6149ef63b65b" start_index="2" end="30b183b8-186a-494c-ace8-694a296ccdca" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="580d2bdc-e8b2-48ff-affc-6149ef63b65b" start_index="3" end="a3e757ca-197b-432d-9fa6-823f7aa40ee6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="580d2bdc-e8b2-48ff-affc-6149ef63b65b" start_index="4" end="f4ca275b-c0ca-43bd-9728-7442a7753bb9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1d6f4de8-086d-4d99-9f07-bd20e384215b" start_index="0" end="580d2bdc-e8b2-48ff-affc-6149ef63b65b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cfe98d52-aafb-4d9f-86dd-cf33361799bb" start_index="0" end="1d6f4de8-086d-4d99-9f07-bd20e384215b" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-9.39749431610107" eyeY="52.4106750488281" eyeZ="34.4080276489258" lookX="6.09853649139404" lookY="21.8498134613037" lookZ="-56.2351608276367" upX="-0.0595070272684097" upY="0.833885848522186" upZ="0.548719763755798" />
  </Cameras>
</Workspace>