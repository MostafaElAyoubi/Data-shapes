<Workspace Version="1.2.2.91" X="143.57443125" Y="207.1472125" zoom="1.33823125" Name="GetLinkedElements.ByHostView" Description="Get all linked elements in host view, following visibility setting of host view" ID="031800e2-441c-4696-8688-58d195c2f2dd" Category="Data-Shapes.Revit.Elements">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="e7fc3d89-7d81-4527-83fd-feec75c896be" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>#Copyright (c) mostafa el ayoubi ,  2017
#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com

import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import*
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument
import System
from System.Collections.Generic import *

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import*
doc = DocumentManager.Instance.CurrentDBDocument

#Inputs

linkdoc = IN[1]
if isinstance(IN[0],list):
	views = UnwrapElement(IN[0])
else:
	views = [UnwrapElement(IN[0])]

collector = []

#getting project base point elevation
basepointfilter = ElementCategoryFilter(BuiltInCategory.OST_ProjectBasePoint)
basepoint = FilteredElementCollector(doc).WherePasses(basepointfilter).ToElements()
bpelevation = [b.ParametersMap.get_Item('Elev').AsDouble() for b in basepoint]

cats = doc.Settings.Categories
cids = [c.Id for c in cats]

UIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits
level = []
for v in views:

	filtercatids = filter(lambda x: not v.GetCategoryHidden(x),cids)
	catfilters = []
	for i in filtercatids:
		catfilters.append(ElementCategoryFilter(System.Enum.ToObject(BuiltInCategory, int(str(i)))))
	catfilterlist = List[ElementFilter](catfilters)
	catfilter = LogicalOrFilter(catfilterlist)
	#creating a boundingbox for each view from it's crop box and view range
	bb = v.CropBox
	vr = v.GetViewRange()
	topclip = PlanViewPlane.TopClipPlane
	bottomclip = PlanViewPlane.BottomClipPlane
	cutclip = PlanViewPlane.CutPlane
	toplevel = (doc.GetElement(vr.GetLevelId(topclip)))
	topoffset = vr.GetOffset(topclip)
	cutlevel = (doc.GetElement(vr.GetLevelId(cutclip)))
	cutoffset = vr.GetOffset(cutclip)
	try:
		topZ = toplevel.Elevation + topoffset - bpelevation[0]
	except:
		topZ = cutlevel.Elevation + cutoffset - bpelevation[0]
	bottomlevel = (doc.GetElement(vr.GetLevelId(bottomclip)))
	bottomoffset = vr.GetOffset(bottomclip)
	try:
		bottomZ = bottomlevel.Elevation + bottomoffset - bpelevation[0]
	except :
		bottomZ = cutlevel.Elevation - bpelevation[0]
	min = bb.Min
	max = bb.Max
	newmin = XYZ(min.X,min.Y,bottomZ)
	newmax = XYZ(max.X,max.Y,topZ)
	ol = Outline(newmin,newmax)

	#combining boundingbox and category filters
	bbfilter = BoundingBoxIntersectsFilter(ol)
	andfilter = LogicalAndFilter(catfilter,bbfilter)

	#collecting elements
	collector.append(FilteredElementCollector(linkdoc).WherePasses(andfilter).ToElements())

OUT = collector</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="13633de0-0075-4c28-9fa7-62983a555731" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="447" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="153644f5-8a45-43ff-8bcb-936f32106069" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="14.5819388465185" y="-9.01097997823621" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Linked Document" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0e578ee3-b2c2-45b4-9b25-8a23ae60b385" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="53.4391991294477" y="58.9892255168903" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Views(s)" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d5e4cc13-be8c-4e8e-9cef-3ca48ef30911" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="60.1644941784164" y="135.209236071867" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Refresh : bool = true" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="e7fc3d89-7d81-4527-83fd-feec75c896be" start_index="0" end="13633de0-0075-4c28-9fa7-62983a555731" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="153644f5-8a45-43ff-8bcb-936f32106069" start_index="0" end="e7fc3d89-7d81-4527-83fd-feec75c896be" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0e578ee3-b2c2-45b4-9b25-8a23ae60b385" start_index="0" end="e7fc3d89-7d81-4527-83fd-feec75c896be" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5e4cc13-be8c-4e8e-9cef-3ca48ef30911" start_index="0" end="e7fc3d89-7d81-4527-83fd-feec75c896be" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>